plugins {
    id 'java'
}

apply plugin: 'application'
mainClassName = "com.intercom.customer.CustomerSearchApplication"

group 'customer'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile group: 'com.beust', name: 'jcommander', version: '1.72'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.7'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.18.4'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.11.1'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
}
jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'com.intercom.customer.CustomerSearchApplication'
        )
    }
}

task fatJar(type: Jar) {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'com.intercom.customer.CustomerSearchApplication'
        )
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

run {
    args = ["-i", System.getProperty("user.dir") + "/src/test/resources/customers.txt"]
    main = "com.intercom.customer.CustomerSearchApplication"
    classpath = sourceSets.main.runtimeClasspath
}

